parameters:
  extRepoUrl : ''
  configFile : ''
  helperBranch : ''
  testSuiteName : ''
  EnvironmentName : ''
  BuildShareFolder : ''
  RootSharePath : ''
  FilterSuffix : ''
  
jobs:
- job:
  displayName: Run regression
  pool: 
    name: TestSuiteBuildPool
  workspace:
    clean: false
  timeoutInMinutes: 0

  steps:
    - checkout: self
      path: 's'

    - checkout: git://${{parameters.extRepoUrl}}@${{parameters.HelperBranch}}

    - task: PowerShell@2
      displayName: 'Run regression script'
      inputs:
        targetType: filePath
        filePath: 'WindowsProtocolTestSuitesHelper/AzureScripts/Run-AzRegressionWithCSV.ps1'
        arguments: '-ConfigFile "${{parameters.configFile}}" -TestSuiteName ${{parameters.testSuiteName}} -EnvType "Local" -HelperBranch "${{parameters.helperBranch}}" -SourceBuildTag "$(test.sourceBuildTag)" -AccessToken "$(System.AccessToken)" -BuildTag "$(test.buildTag)" -PipelineName "$(test.downstreamPipelineName)" -ApiUrl "$(build.apiUrl)" -SubscriptionId "$(azure.subscriptionId)" -ApplicationId "$(azure.applicationId)" -ThumbPrint "$(azure.thumbPrint)" -TenantId "$(azure.tenantId)" -StorageAccount "$(azure.storageAccount)" -ResultStorageAccount "$(azure.resultStorageAccount)" -StorageShareName "$(azure.storageShareName)" -LocalRegressionShare "$(build.sharePath)" -FileShareResourceGroup "$(azure.fileShareResourceGroup)" -IsTriggeredFromGitHub $false -FilterSuffix "${{parameters.FilterSuffix}}"'
      env:
        BUILD_BUILDID: $(Build.BuildId)
        SMTP_SENDERPASSWORD: $(smtp.senderPassword)
        SMTP_SMTPHOST: $(smtp.smtpHost)
        SMTP_SMTPPORT: $(smtp.smtpPort)
        SMTP_SENDERUSERNAME: $(smtp.senderUsername)
        SMTP_SENDTO: $(smtp.sendTo)
      timeoutInMinutes: 0

    - task: PublishTestResults@2
      displayName: 'Publish trx files'
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '$(Build.Repository.LocalPath)/TestResults/*/*.trx'
      timeoutInMinutes: 0
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish report'
      inputs:
        PathtoPublish: '$(Build.Repository.LocalPath)/TestResults'
      timeoutInMinutes: 0
      condition: always()

